language: node_js
node_js:
  - 10
branches:
    only:
        - main
script:
    - npm run lint
    - npm run test
    - npm run build
before_deploy:
    - git checkout origin/main && git fetch && git remote set-url origin https://${GITHUB_OAUTH_TOKEN}@github.com/ZEXSM/node-scc-config.git
    - PR_TITLE=$(git log -1 --pretty='%f')
    - PREPARE_LAST_TAG=$(echo $(git describe --tags $(git rev-list --tags --max-count=1)) | cut -d'v' -f 2)
    - LAST_TAG=${PREPARE_LAST_TAG:-$DEFAULT_PACKAGE_VERSION}
    - CURRENT_MAJOR=$(echo $LAST_TAG | cut -d. -f 1)
    - CURRENT_MINOR=$(echo $LAST_TAG | cut -d. -f 2)
    - CURRENT_PATCH=$(echo $(echo $LAST_TAG | cut -d. -f 3) | cut -d- -f 1)
    - RC=$(echo $(echo $LAST_TAG | cut -d. -f 3) | cut -d- -f 2)
    - MAJOR=$(([ "$RC" == "rc" ] && echo $CURRENT_MAJOR) || ([ "$(echo $PR_TITLE | grep -oP 'release')" == "release" ] && echo $(($CURRENT_MAJOR+1))) || echo $CURRENT_MAJOR)
    - MINOR=$(([ "$RC" == "rc" ] && echo $CURRENT_MINOR) || ([ "$(echo $PR_TITLE | grep -oP 'release')" == "release" ] && echo 0) || ([ "$(echo $PR_TITLE | grep -oP 'feature')" == "feature" ] && echo $(($CURRENT_MINOR+1))) || echo $CURRENT_MINOR)
    - PATCH=$(([ "$RC" == "rc" ] && echo $CURRENT_PATCH) || ([ "$(echo $PR_TITLE | grep -oP 'release')" == "release" ] && echo 0) || ([ "$(echo $PR_TITLE | grep -oP 'feature')" == "feature" ] && echo 0) || echo $(($CURRENT_PATCH+1)))
    - NEW_TAG=$(echo $MAJOR.$MINOR.$PATCH)
    - PACKAGE_VERSION=${NEW_TAG}
    - npm version v$PACKAGE_VERSION && git push origin HEAD:main
deploy:
    provider: releases
    name: v$PACKAGE_VERSION
    token: $GITHUB_OAUTH_TOKEN
    cleanup: true
    repo: ZEXSM/node-scc-config
    on:
        branch: main
after_deploy:
    - echo "registry=https://registry.npmjs.org/:_authToken=$NPM_API_TOKEN" > ~/.npmrc
    - npm publish